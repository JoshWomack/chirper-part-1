{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\joshw\\\\Documents\\\\covalencelabs\\\\chirper-part-1\\\\src\\\\components\\\\App.jsx\";\nimport React, { Component } from \"react\";\nimport Timeline from \"./Timeline\";\nimport CreateChirp from \"./CreatePostForm\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      chirps: [{\n        userName: \"Frank\",\n        chirpContent: \"Well, I don't know how many years on this earth I got left, I'm gonna get real weird with it.\",\n        chirpId: 5\n      }, {\n        userName: \"Charlie\",\n        chirpContent: \"Dude, it's amazing. Look at this. Bro, you could chop a camel right in the hump and drink all of its milk right off the tip of this thing.\",\n        chirpId: 4\n      }, {\n        userName: \"Charlie\",\n        chirpContent: \"@Dennis, Alright well I'm gonna check it out anyway, there could be something delicious in here that wasps do make and I want that\",\n        chirpId: 3\n      }, {\n        userName: \"Dennis\",\n        chirpContent: \"@Charlie, no, wasps do not make honey.\",\n        chirpId: 2\n      }, {\n        userName: \"Charlie\",\n        chirpContent: \"Do wasps make honey?\",\n        chirpId: 1\n      }],\n      createChirp: false,\n      numChirps: 5\n    };\n    _this.handleCreateChirp = _this.handleCreateChirp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmittedChirp = _this.handleSubmittedChirp.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"handleCreateChirp\",\n    value: function handleCreateChirp() {\n      this.setState({\n        createChirp: true\n      });\n    }\n  }, {\n    key: \"handleSubmittedChirp\",\n    value: function handleSubmittedChirp(chirp) {\n      this.setState({\n        chirps: [chirp].concat(_toConsumableArray(this.state.chirps)),\n        createChirp: false,\n        numChirps: this.state.numChirps + 1,\n        userName: chirp.userName\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.createChirp === false) {\n        return React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"jumbotron mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"display-3 col mb-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Chirper\"), React.createElement(\"button\", {\n          className: \"btn btn-lg shadow ml-5\",\n          onClick: this.handleCreateChirp,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Chirp Chirp!\")), React.createElement(Timeline, {\n          chirps: this.state.chirps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"jumbotron mt-3\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          className: \"display-3 col mb-5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"Chirper\"))), React.createElement(\"div\", {\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(CreateChirp, {\n          handleSubmittedChirp: this.handleSubmittedChirp,\n          chirpId: this.state.numChirps,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        })));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:\\Users\\joshw\\Documents\\covalencelabs\\chirper-part-1\\src\\components\\App.jsx"],"names":["React","Component","Timeline","CreateChirp","App","props","state","chirps","userName","chirpContent","chirpId","createChirp","numChirps","handleCreateChirp","bind","handleSubmittedChirp","setState","chirp"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Timeline from \"./Timeline\";\r\nimport CreateChirp from \"./CreatePostForm\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      chirps: [\r\n        {\r\n          userName: \"Frank\",\r\n          chirpContent:\r\n            \"Well, I don't know how many years on this earth I got left, I'm gonna get real weird with it.\",\r\n          chirpId: 5\r\n        },\r\n        {\r\n          userName: \"Charlie\",\r\n          chirpContent:\r\n            \"Dude, it's amazing. Look at this. Bro, you could chop a camel right in the hump and drink all of its milk right off the tip of this thing.\",\r\n          chirpId: 4\r\n        },\r\n        {\r\n          userName: \"Charlie\",\r\n          chirpContent:\r\n            \"@Dennis, Alright well I'm gonna check it out anyway, there could be something delicious in here that wasps do make and I want that\",\r\n          chirpId: 3\r\n        },\r\n        {\r\n          userName: \"Dennis\",\r\n          chirpContent: \"@Charlie, no, wasps do not make honey.\",\r\n          chirpId: 2\r\n        },\r\n        {\r\n          userName: \"Charlie\",\r\n          chirpContent: \"Do wasps make honey?\",\r\n          chirpId: 1\r\n        }\r\n      ],\r\n      createChirp: false,\r\n      numChirps: 5\r\n    };\r\n    this.handleCreateChirp = this.handleCreateChirp.bind(this);\r\n    this.handleSubmittedChirp = this.handleSubmittedChirp.bind(this);\r\n  }\r\n\r\n  handleCreateChirp() {\r\n    this.setState({ createChirp: true });\r\n  }\r\n\r\n  handleSubmittedChirp(chirp) {\r\n    this.setState({\r\n      chirps: [chirp, ...this.state.chirps],\r\n      createChirp: false,\r\n      numChirps: this.state.numChirps + 1,\r\n      userName: chirp.userName\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.createChirp === false) {\r\n      return (\r\n        <div className=\"container\">\r\n          <div className=\"jumbotron mt-3\">\r\n            <h1 className=\"display-3 col mb-5\">Chirper</h1>\r\n            <button\r\n              className=\"btn btn-lg shadow ml-5\"\r\n              onClick={this.handleCreateChirp}\r\n            >\r\n              Chirp Chirp!\r\n            </button>\r\n          </div>\r\n          <Timeline chirps={this.state.chirps} />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <div className=\"container\">\r\n            <div className=\"jumbotron mt-3\">\r\n              <h1 className=\"display-3 col mb-5\">Chirper</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">\r\n            <CreateChirp\r\n              handleSubmittedChirp={this.handleSubmittedChirp}\r\n              chirpId={this.state.numChirps}\r\n            />\r\n          </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}